@page "/characterSheet"
@using RPG.Engine.Services
@using RPG.Engine
@using RPG.Engine.Ids
@using RPG.Components
@using Blazorise
@inject StatService StatService
@inject FunctionService FunctionService


<h3>CharacterSheet</h3>

<div style="background-color: red">
    @foreach (var e in _errors)
    {
        <div>@e</div>
    }
</div>

<SectionBox Book="@_book" SectionName="#Characteristique"></SectionBox>

<br />
<br />
<SectionBox Book="@_book" SectionName="#Combat"></SectionBox>

<br />
<br />

<SectionBox Book="@_book" SectionName="#Vital"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#MagieDivine"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#MagieSauvage"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#MagieProfane"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#MetaMagieProfane"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#MagieProfaneMatiere"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#MagieProfaneEnergie"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#Competences"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#Environement"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#Social"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#Physique"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#Ombre"></SectionBox>
<br />
<br />

<SectionBox Book="@_book" SectionName="#Savoir"></SectionBox>
<br />
<br />

@*TODO<input type="file" @onchange="LoadFromFile" />*@
<MemoEdit Rows="20" @bind-Text="@_json" />
<button @onclick="Reload">Load</button>

@code {

    private IEnumerable<string> _errors = Enumerable.Empty<string>();
    private string _json = "";
#nullable disable
    private Book _book;
#nullable restore

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _book = new Book(StatService, FunctionService);
    }

    private void Reload(MouseEventArgs _)
    {
        try
        {
            var file = _json;

            _book = new Book(StatService, FunctionService);
            StatService.Stats.Clear();//todo
            _errors = _book.Populate(file);
            StateHasChanged();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _errors = new[] { e.Message };
        }
    }

    private void LoadFromFile(ChangeEventArgs e)
    {
        var file = (string)e.Value;

        _errors = _book.Populate(file);
        StateHasChanged();
    }
}
