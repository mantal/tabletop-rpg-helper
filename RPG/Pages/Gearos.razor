@page "/gearos"
@using RPG.Engine.Services
@using RPG.Engine
@using RPG.Engine.Ids
@using RPG.Components
@using Blazorise
@using RPG.Data
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject StatService StatService
@inject FunctionService FunctionService
@inject Chat Chat

<h3>gearos</h3>

<div style="background-color: red">
    @foreach (var e in _errors)
    {
        <div>@e</div>
    }
</div>

XP: @_xp

<GearosAbilitySectionBox Book="@_book" OnChange="@OnChange"></GearosAbilitySectionBox>
<GearosHealthSectionBox Book="@_book" SectionName="#PV"></GearosHealthSectionBox>
<GearosSectionBox Book="@_book" SectionName="#CAC" OnChange="@OnChange" OnRolled="@OnRolled"></GearosSectionBox>

<Button @onclick="@(_ => _showRules = !_showRules)">toggle</Button>
@if (_showRules)
{
    <MemoEdit Rows="20" @bind-Text="@Json"/>
}

@foreach (var log in Chat.Logs)
{
    <div>@log</div>
}

@code {

    private IEnumerable<string> _errors = Enumerable.Empty<string>();
    private string _json = "";
    private string Json
    {
        get => _json;
        set 
        {
            _json = value;
            Reload();
        }
    }
#nullable disable
    private Book _book;
#nullable restore

    private bool _isFirstRender = true;
    private bool _showRules = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _book = new Book(StatService, FunctionService);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_isFirstRender)
        {
            Json = await LocalStorage.GetItemAsync<string?>("gearos") ?? "";
        }
        _isFirstRender = false;
    }

    private void Reload(MouseEventArgs? _ = null)
    {
        try
        {
            var file = Json;

            _errors = Enumerable.Empty<string>();
            _errors = _book.Update(file);
            SaveRules();

            StateHasChanged();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _errors = new[] { e.Message };
        }
    }

    private void SaveRules()
    {
        LocalStorage.SetItemAsync("gearos", Json);
    }

    private int _xp = 0;

    private void OnChange(int xpChange)
    {
        _xp += xpChange;
        StateHasChanged();
    }

    private void OnRolled(int successCount)
    {
        StateHasChanged();
    }
}